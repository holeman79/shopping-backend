{"version":3,"sources":["resources/images/xButton.PNG","components/common/Button/Button.js","constants/Constants.js","components/common/Header/Header.js","store/modules/base.js","containers/common/HeaderContainer.js","components/common/Footer/Footer.js","components/common/PageTemplate/PageTemplate.js","components/common/Wrapper/Wrapper.js","components/list/ProductList/ProductList.js","components/list/Pagination/Pagination.js","store/modules/list.js","containers/list/ListContainer.js","pages/ListPage.js","components/product/ProductViewInfo/ProductViewInfo.js","components/product/ProductViewBody/ProductViewBody.js","containers/product/ProductViewContainer.js","pages/ProductViewPage.js","components/common/FileUploadButton/FileUploadButton.js","components/product/ProductRegistrationInfo/ProductRegistrationInfo.js","components/product/ProductRegistrationBody/ProductRegistrationBody.js","containers/product/ProductRegistrationContainer.js","pages/ProductRegistrationPage.js","components/login/Login/Login.js","containers/login/LoginContainer.js","pages/LoginPage.js","components/signup/SignupTemplate/SignupTemplate.js","components/signup/SignupBody/SignupBody.js","containers/signup/SignupContainer.js","pages/SignupPage.js","components/order/OrderList/OrderList.js","components/order/OrderInfo/OrderInfo.js","components/modal/ModalWrapper/ModalWrapper.js","components/modal/PostCodeModal/PostCodeModal.js","components/order/PaymentInfo/PaymentInfo.js","containers/order/OrderContainer.js","pages/OrderPage.js","components/order/OrderComplete/OrderComplete.js","containers/order/OrderCompleteContainer.js","pages/OrderCompletePage.js","pages/NotFoundPage.js","components/oauth2/OAuth2RedirectHandler.js","components/App.js","store/configure.js","Root.js","serviceWorker.js","index.js","lib/api.js","store/modules/order.js","store/modules/productView.js","store/modules/productRegistration.js"],"names":["module","exports","cx","classNames","bind","styles","Div","children","rest","Button","to","onClick","disabled","theme","Element","Link","className","WARNING_ADD_PRODUCT","WARNING_ADD_PRODUCT_OPTION","WARNING_ADD_PRODUCT_IMAGE","WARNING_ADD_ORDER_OPTION","WARNING_ADD_ORDER_ORDERER_INFO","WARNING_ADD_ORDER_PAYMENT_WAY","WARNING_ADD_ORDER_PAYMENT_DEPOSITORNAME","Header","categories","logged","onLoginClick","role","sessionStorage","getItem","categoryList","map","category","index","key","value","JSON","stringify","get","initializeLogin","createAction","login","api","changeInputLogin","changeInputSignup","signup","getCategoryList","getOauth2User","initialState","Map","fromJS","userId","password","name","authorities","error","handleActions","state","action","set","pender","type","onSuccess","payload","data","id","imageUrl","accessToken","tokenType","setItem","onError","setIn","HeaderContainer","handleLoginClick","props","BaseActions","history","removeItem","window","location","reload","e","console","log","push","initialize","a","this","Component","connect","base","dispatch","bindActionCreators","baseActions","withRouter","Footer","PageTemplate","Wrapper","title","numberFormat","Intl","NumberFormat","ProductItem","price","productFile","directory","savedFileName","imagePathUrl","constants","encodeURI","src","format","ProductList","products","productList","size","product","toJS","Pagination","page","lastPage","createPagePath","getProductList","meta","List","content","undefined","totalPages","parseInt","ListContainer","ListActions","prevProps","prevState","document","documentElement","scrollTop","loading","list","pending","listActions","ListPage","match","params","ProductViewInfo","selectedColor","orderOptions","colorSizeList","onChangeProductInput","onDeleteOption","onChangeOrderProductNumber","onPurchase","savedMoneyRate","options","colorList","option","colorValue","code","sizeList","i","sizeValue","orderOptionList","orderOption","defaultValue","onChange","selected","ProductViewBody","productDetailFiles","description","productDetailImageList","productDetailFile","toastColor","background","text","ProductViewContainer","toast","notify","createShowQueue","ProductViewActions","getProduct","handleChangeProductInput","target","changeSelectbox","changeInput","handleChangeOrderProductNumber","changeOrderProductNumber","handleAddOrderOption","selectedSize","color","msg","addOrderOption","handleDeleteOption","deleteOrderOption","handlePurchase","OrderActions","orderItems","number","initializeOrder","productOptions","exist","j","item","update","setState","productView","ProductViewPage","FileUploadButton","button","htmlFor","icon","faImage","faImages","multiple","ProuductRegistrationInfo","productFiles","colorData","sizeData","onAddOption","onImageUpload","productImagePreview","categoryValue","optionList","placeholder","ProductRegistrationBody","onAddProduct","productDetailImagesPreview","productDetailImagePreview","ProductRegistrationContainer","handleImageUpload","ProductRegistrationActions","files","preventDefault","length","file","fileUrl","URL","createObjectURL","addSingleImage","addMultiImage","deleteOption","handleAddOption","addOption","alert","handleSubmit","productImage","productDetailImages","formData","FormData","append","Blob","addProduct","productId","getOptionList","productRegistration","productRegistrationActions","ProductRegistrationPage","Login","visible","onLogin","onKeyPress","handleChange","autoFocus","LoginContainer","handleLogin","href","hideModal","handleKeyPress","loginId","getIn","LoginPage","SignupTemplate","SignupBody","onSignup","onChangeInput","SignupContainer","handleChangeInput","handleSignup","SignupPage","OrderItem","thumbnailUrl","thumbnailSavedFileName","OrderList","orderItemList","order","OrderInfo","zipcode","address","phoneFirstNumberTypes","onPostCode","phoneFirstNumberTypeList","phoneFirstNumberType","ModalWrapper","animate","startAnimation","setTimeout","animation","PostCodeModal","onCancel","onAddress","onComplete","autoClose","PaymentInfo","paymentWays","bankBooks","totalPrice","depositorName","selectedBankBook","selectedPayment","onChangeObject","onPayment","paymentWayList","paymentWay","checked","bankBookList","bankBook","showValue","OrderContainer","calculateTotalPrice","handlePostCode","showModal","handleCancel","handleChangeObject","changeObject","handleAddress","addr","extraAddr","userSelectedType","roadAddress","jibunAddress","bname","test","buildingName","apartment","zonecode","handlePayment","ordererName","detailAddress","mobileNo1","mobileNo2","mobileNo3","addOrder","orderActions","OrderPage","OrderComplete","accountInfo","OrderCompleteContainer","OrderCompletePage","NotFoundPage","OAuth2RedirectHandler","pathname","from","App","exact","path","component","reducers","combineReducers","modules","middlewares","penderMiddleware","composeEnhancers","compose","store","preloadedState","createStore","applyMiddleware","configure","Root","Boolean","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","request","token","headers","Authorization","axios","post","getProductOptionList","queryString","getOrderOptionList","INITIALIZE_ORDER","GET_OPTION_LIST","SHOW_MODAL","HIDE_MODAL","ADD_ORDER","CHANGE_INPUT","CHANGE_OBJECT","modalPostCode","extraAddress","status","message","eval","response","INITIALIZE","GET_PRODUCT","ADD_ORDER_OPTION","DELETE_ORDER_OPTION","CHANGE_SELECTBOX","CHANGE_ORDER_PRODUCT_NUMBER","categoryCode","delete","ADD_OPTION","DELETE_OPTION","ADD_SINGLE_IMAGE","ADD_MULTI_IMAGE","ADD_PRODUCT","createdId"],"mappings":"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","file":"static/js/main.b7d4240b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/xButton.29a09adc.PNG\";","import React from 'react';\nimport styles from './Button.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst Div = ({children, ...rest}) => <div {...rest}>{children}</div>\n\nconst Button = ({\n    children, to, onClick, disabled, theme = 'default',\n}) => {\n    const Element = (to && !disabled) ? Link : Div;\n\n    return (\n        <Element\n            to={to}\n            className={cx('button', theme, {disabled})}\n            onClick={disabled ? () => null : onClick}>\n            {children}\n        </Element>\n    )\n}\n\nexport default Button;","// Product Registration Page\nexport const BASE_URL = 'http://localhost:5050/';\nexport const OAUTH2_REDIRECT_URI = 'http://localhost:4000/oauth2/redirect';\n\nexport const INPUT_TEXT_PLACEHOLDER_TITLE = '타이틀을 입력하세요';\nexport const INPUT_TEXT_PLACEHOLDER_PRICE = '가격을 입력하세요';\nexport const INPUT_TEXT_PLACEHOLDER_SAVED_MONEY = '적립금 %을 입력하세요';\nexport const INPUT_TEXT_PLACEHOLDER_COLOR = '색상을 입력하세요';\nexport const INPUT_TEXT_PLACEHOLDER_SIZE = '사이즈를 입력하세요';\nexport const INPUT_TEXT_PLACEHOLDER_NUMBER = '판매수량을 입력하세요';\n\nexport const TEXT_IMAGE_UPLOAD = '사진 첨부';\nexport const TEXT_CATEGORY = '카테고리';\nexport const TEXT_PRICE = '판매가';\nexport const TEXT_SAVED_MONEY = '적립금';\nexport const TEXT_DELIVERY_MONEY = '배송비';\nexport const TEXT_BASIC_INFO = '기본정보';\nexport const TEXT_OPTION = '옵션선택'\nexport const TEXT_COLOR = '색상';\nexport const TEXT_SIZE = '사이즈';\nexport const TEXT_CART = '장바구니';\nexport const TEXT_PURCHASE = '구매하기';\nexport const TEXT_NUMBER = '수량';\nexport const TEXT_ORDER = '주문';\nexport const TEXT_OPTION_ADD = '상품옵션 추가';\nexport const TEXT_DESCRIPTION_DETAIL_IMAGE = '상세상품 이미지를 등록하세요';\nexport const TEXT_DESCRIPTION_DETAIL_TEXT = '상세상품 설명을 등록하세요';\nexport const TEXT_PRODUCT_ADD = '상품 등록';\nexport const TEXT_BODY_DESCRIPTION = '사용자의 모니터에 따라 실제 색상과 차이가 있을 수 있습니다.';\n\nexport const SELECTBOX_DEFAULT = \"[필수] 옵션을 선택해 주세요\";\nexport const SELECTBOX_CATEGORY = 'product_category';\nexport const SELECTBOX_COLOR = 'product_color';\nexport const SELECTBOX_SIZE = 'product_size';\n\nexport const IMAGE_GET_API = '/api/file';\nexport const DELIVERY_FREE_PRICE = 50000;\nexport const DELEVIERY_PRICE = 2500;\n\nexport const WARNING_ADD_PRODUCT = \"필수 값을 입력하세요.\";\nexport const WARNING_ADD_PRODUCT_OPTION = \"상품옵션을 입력하세요.\";\nexport const WARNING_ADD_PRODUCT_IMAGE = \"상품이미지를 등록하세요.\";\nexport const WARNING_ADD_ORDER_OPTION = \"이미 선택한 옵션입니다.\";\n\nexport const WARNING_ADD_ORDER_ORDERER_INFO = \"받는분 정보를 모두 입력하세요.\";\nexport const WARNING_ADD_ORDER_PAYMENT_WAY = \"구현중입니다.\";\nexport const WARNING_ADD_ORDER_PAYMENT_DEPOSITORNAME = \"입금자 성함을 입력하세요.\";","import React from 'react';\nimport styles from './Header.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport Button from \"components/common/Button\";\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\n\nconst Header = ({categories, logged, onLoginClick}) => {\n    const role = sessionStorage.getItem('role');\n    const categoryList = categories.map((category, index) => {\n        return(<Link className={cx('item')} key={index} value={JSON.stringify(category)} to={`/category/${category.get('code')}`}>{category.get('name')}</Link>)\n    });\n\n    return(\n        <header className={cx('header')}>\n            <div className={cx('header-content')}>\n                <div className={cx('left')}>\n                    { (role === 'ADMIN')  && <Button theme=\"outline\" to=\"/product/registration\">상품등록</Button>}\n                </div>\n                <div className={cx('brand')}>\n                    <Link to=\"/\">The Shopping Mall</Link>\n                </div>\n                <div className={cx('right')}>\n\n                    <Button theme=\"outline\" onClick={onLoginClick}>{logged ? '로그아웃' : '로그인'}</Button>\n                    {!logged && <Button theme=\"outline\" to=\"/signup\">회원가입</Button>}\n                    {/*<Button theme=\"outline\" to=\"\">{constants.TEXT_CART}</Button>*/}\n                    {/*<Button theme=\"outline\" to=\"\">{constants.TEXT_ORDER}</Button>*/}\n                </div>\n            </div>\n            <div className={cx('header-content')}>\n                <div className={cx('category')}>\n                    {categoryList}\n                </div>\n            </div>\n        </header>\n    )\n};\n\nexport default Header;","import { createAction, handleActions } from 'redux-actions';\nimport * as api from 'lib/api';\n\nimport {fromJS, Map} from 'immutable';\nimport { pender } from 'redux-pender';\n\n// action types\nconst INITIALIZE_LOGIN = 'base/INITIALIZE_LOGIN';\nconst LOGIN = 'base/LOGIN';\nconst CHANGE_INPUT_LOGIN = 'base/CHANGE_INPUT';\nconst CHANGE_INPUT_SIGNUP = 'base/CHANGE_INPUT_SIGNUP';\nconst SIGNUP = 'base/SIGNUP';\nconst GET_CATEGORY_LIST = 'base/GET_CATEGORY_LIST';\nconst GET_OAUTH2_USER = 'base/GET_OAUTH2_USER';\n\n// action creators\nexport const initializeLogin = createAction(INITIALIZE_LOGIN);\nexport const login = createAction(LOGIN, api.login);\nexport const changeInputLogin = createAction(CHANGE_INPUT_LOGIN);\nexport const changeInputSignup = createAction(CHANGE_INPUT_SIGNUP);\nexport const signup = createAction(SIGNUP, api.signup);\nexport const getCategoryList = createAction(GET_CATEGORY_LIST, api.getCategoryList);\nexport const getOauth2User = createAction(GET_OAUTH2_USER, api.getOauth2User);\n\n// initial state\nconst initialState = Map({\n    categories: fromJS([]),\n    login: Map({\n        userId: '',\n        password: '',\n        name: '',\n        authorities: '',\n        error: false\n    }),\n    signup: Map({\n        userId: '',\n        name: '',\n        password: '',\n    }),\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE_LOGIN]: (state, action) => {\n        return state.set('login', initialState.get('login'));\n    },\n    ...pender({\n        type: LOGIN,\n        onSuccess: (state, action) => {\n            const { id, name, imageUrl, role, accessToken, tokenType } = action.payload.data;\n            sessionStorage.setItem(\"id\", id);\n            sessionStorage.setItem(\"name\", name);\n            sessionStorage.setItem(\"imageUrl\", imageUrl);\n            sessionStorage.setItem(\"role\", role.name);\n            sessionStorage.setItem('accessToken', accessToken);\n            sessionStorage.setItem('tokenType', tokenType);\n            sessionStorage.logged = true;\n        },\n        onError: (state, action) => {\n            return state.setIn(['login', 'error'], true)\n                .setIn(['login', 'userId'], '')\n                .setIn(['login', 'password'], '');\n        }\n    }),\n    [CHANGE_INPUT_LOGIN]: (state, action) => {\n        const { name, value } = action.payload;\n        return state.setIn(['login', name], value);\n    },\n    [CHANGE_INPUT_SIGNUP]: (state, action) => {\n        const { name, value } = action.payload;\n        return state.setIn(['signup', name], value);\n    },\n    ...pender({\n        type: SIGNUP,\n        onSuccess: (state, action) =>{\n\n        },\n        onError: (state, action) => {\n            return state.setIn(['signup', 'userId'], '')\n                .setIn(['signup', 'name'], '')\n                .setIn(['signup', 'password'], '');\n        }\n    }),\n    ...pender({\n        type: GET_OAUTH2_USER,\n        onSuccess: (state, action) => {\n            const { id, name, imageUrl, role, accessToken, tokenType } = action.payload.data;\n            sessionStorage.setItem(\"id\", id);\n            sessionStorage.setItem(\"name\", name);\n            sessionStorage.setItem(\"imageUrl\", imageUrl);\n            sessionStorage.setItem(\"role\", role.name);\n            sessionStorage.setItem('accessToken', accessToken);\n            sessionStorage.setItem('tokenType', tokenType);\n            sessionStorage.logged = true;\n\n            //const { data: userInfo } = action.payload;\n            //sessionStorage.setItem('userInfo', JSON.stringify(userInfo));\n        },\n        onError: (state, action) => {\n            return state.setIn(['login', 'error'], true);\n        }\n    }),\n    ...pender({\n        type: GET_CATEGORY_LIST,\n        onSuccess: (state, action) =>{\n            const { data: categories } = action.payload;\n            return state.set('categories', fromJS(categories))\n        },\n        onError: (state, action) => {\n            return state.setIn(['signup', 'userId'], '')\n                .setIn(['signup', 'name'], '')\n                .setIn(['signup', 'password'], '');\n        }\n    }),\n}, initialState)","import React, {Component} from 'react';\nimport Header from 'components/common/Header';\nimport { withRouter } from 'react-router-dom';\n\nimport * as baseActions from 'store/modules/base';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nclass HeaderContainer extends Component {\n    handleLoginClick = () => {\n        const logged = sessionStorage.logged;\n        const { BaseActions, history } = this.props;\n        if(logged){\n            try{\n                sessionStorage.removeItem(\"id\");\n                sessionStorage.removeItem(\"name\");\n                sessionStorage.removeItem(\"imageUrl\");\n                sessionStorage.removeItem(\"role\");\n                sessionStorage.removeItem(\"accessToken\");\n                sessionStorage.removeItem(\"tokenType\");\n\n                sessionStorage.logged = '';\n                window.location.reload();\n            }catch(e){\n                console.log(e);\n            }\n            return;\n        }\n\n        history.push('/login');\n        BaseActions.initializeLogin();\n    };\n\n    initialize = async () => {\n        const { BaseActions } = this.props;\n        try{\n            await BaseActions.getCategoryList();\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    componentDidMount() {\n        this.initialize();\n    };\n\n    render() {\n        const { handleLoginClick } = this;\n        const { categories } = this.props;\n        const logged = sessionStorage.logged;\n        return (\n            <Header\n                logged={logged}\n                categories={categories}\n                onLoginClick={handleLoginClick}\n            />\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        categories: state.base.get('categories'),\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch),\n    })\n)(withRouter(HeaderContainer));","import React from 'react';\nimport styles from './Footer.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\n\nconst cx = classNames.bind(styles);\n\nconst Footer = ({onLoginClick}) => (\n    <footer className={cx('footer')}>\n        <Link to=\"/\" className={cx('brand')}>The Shopping Mall</Link>\n        <div onClick={onLoginClick} className={cx('admin-login')}>Copyright © The Shopping Mall. All rights reserved. Designed by holeman.</div>\n    </footer>\n)\n\nexport default Footer;","import React from 'react';\nimport styles from './PageTemplate.scss';\nimport classNames from 'classnames/bind';\nimport HeaderContainer from 'containers/common/HeaderContainer';\nimport Footer from 'components/common/Footer';\n\nconst cx = classNames.bind(styles);\n\nconst PageTemplate = ({children}) => (\n    <div className={cx('page-template')}>\n        <HeaderContainer/>\n        <main>\n            {children}\n        </main>\n        <Footer/>\n    </div>\n)\n\nexport default PageTemplate;","import React from 'react';\nimport styles from './Wrapper.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nconst Wrapper = ({children, title}) => (\n    <div className={cx('list-wrapper')}>\n        {title && <div className={cx('title')}>{title}</div>}\n        {children}\n    </div>\n);\n\nexport default Wrapper;","import React from 'react';\nimport styles from './ProductList.scss';\nimport classNames from 'classnames/bind';\nimport { Link } from 'react-router-dom';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\nconst numberFormat = new Intl.NumberFormat();\n\nconst ProductItem = ({id, title, price, productFile}) => {\n    const { directory, savedFileName }  = productFile;\n    const imagePathUrl = constants.IMAGE_GET_API + \"?fileName=\" + encodeURI(directory + savedFileName);\n    return (\n        <Link className={cx('product-item')} to={`/product/${id}`}>\n            <img src={imagePathUrl}/>\n            <div className={cx('product-name')}>{title}</div>\n            <div className={cx('product-price')}>{numberFormat.format(price)}원</div>\n        </Link>\n    )\n}\n\nconst ProductList = ({products}) => {\n    let productList = \"\";\n\n    if(products.size > 0){\n        productList = products.map(\n            (product) => {\n                const {id, title, price, productFile} = product.toJS();\n                return (\n                    <ProductItem\n                        title={title}\n                        price={price}\n                        productFile={productFile}\n                        key={id}\n                        id={id}\n                    />\n                )\n            }\n        )\n    }\n\n    return (\n        <div className={cx('product-list')}>\n            {productList}\n        </div>\n    );\n};\n\nexport default ProductList;","import React from 'react';\nimport styles from './Pagination.scss';\nimport classNames from 'classnames/bind';\nimport Button from 'components/common/Button';\n\nconst cx = classNames.bind(styles);\n\nconst Pagination = ({page, lastPage, category}) => {\n    const createPagePath = (page) => {\n        return category ? `/category/${category}/${page}` : `/page/${page}`;\n    }\n\n    return (\n        <div className={cx('pagination')}>\n            <Button disabled={page === 1} to={createPagePath(page - 1)}>\n                이전 페이지\n            </Button>\n            <div className={cx('number')}>\n                페이지 {page}\n            </div>\n            <Button disabled={page === lastPage} to={createPagePath(page + 1)}>\n                다음 페이지\n            </Button>\n        </div>\n    )\n}\n\n\n\nexport default Pagination;","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api';\n\n// action types\nconst GET_PRODUCT_LIST = 'list/GET_PRODUCT_LIST';\n\n// action creators\nexport const getProductList = createAction(GET_PRODUCT_LIST, api.getProductList, meta=>meta);\n\n// initial state\nconst initialState = Map({\n    products: List(),\n    lastPage: null\n});\n\n// reducer\nexport default handleActions({\n    ...pender({\n        type: GET_PRODUCT_LIST,\n        onSuccess: (state, action) => {\n            const { content: products } = action.payload.data;\n            if (products == undefined) return initialState;\n            const lastPage = action.payload.data.totalPages;\n            return state.set('products', fromJS(products))\n                .set('lastPage', parseInt(lastPage, 10));\n        }\n    })\n}, initialState)","import React, {Component} from 'react';\nimport ProductList from 'components/list/ProductList';\nimport Pagination from 'components/list/Pagination';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as listActions from 'store/modules/list';\n\nclass ListContainer extends Component {\n    getProductList = () => {\n        const { page, category, ListActions } = this.props;\n        ListActions.getProductList({\n            page,\n            category\n        });\n    }\n\n    componentDidMount() {\n        this.getProductList();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if(prevProps.page !== this.props.page || prevProps.category !== this.props.category){\n            this.getProductList();\n            document.documentElement.scrollTop = 0;\n        }\n    }\n\n    render() {\n        const { loading, products, page, lastPage, category } = this.props;\n        if(loading) return null;\n        return (\n            <div>\n                <ProductList products={products}/>\n                <Pagination page={page} lastPage={lastPage} category={category}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        lastPage: state.list.get('lastPage'),\n        products: state.list.get('products'),\n        loading: state.pender.pending['list/GET_PRODUCT_LIST']\n    }),\n    (dispatch) => ({\n        ListActions: bindActionCreators(listActions, dispatch)\n    })\n)(ListContainer);\n","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport Wrapper from \"components/common/Wrapper\";\nimport ListContainer from \"containers/list/ListContainer\";\n\nconst ListPage = ({match}) => {\n    const { page = 1, category } = match.params;\n    return (\n        <PageTemplate>\n            <Wrapper>\n                <ListContainer page={parseInt(page, 10)} category={category}/>\n            </Wrapper>\n        </PageTemplate>\n    );\n};\n\nexport default ListPage;","import React, {Component} from 'react';\nimport styles from './ProductViewInfo.scss';\nimport classNames from 'classnames/bind';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\nconst numberFormat = new Intl.NumberFormat();\n\nclass ProductViewInfo extends Component {\n\n    render() {\n        const { product, selectedColor, orderOptions, colorSizeList, onChangeProductInput, onDeleteOption, onChangeOrderProductNumber, onPurchase } = this.props;\n        const { id, title, price, savedMoneyRate, options, productFile } = product.toJS();\n        let imagePathUrl = \"\";\n        if(productFile != \"\"){\n            const { directory, savedFileName } = productFile;\n            imagePathUrl = constants.IMAGE_GET_API + \"?fileName=\" + encodeURI(directory + savedFileName);\n        }\n        const colorList = colorSizeList.map(\n            (option, index) => {\n                const colorValue = {code: option.get('color').get('code'), name: option.get('color').get('name')};\n                return(<option key={index} value={JSON.stringify(colorValue)}>{option.get('color').get('name')}</option>);\n            }\n        );\n        let sizeList = \"\";\n        if(selectedColor.get('code') != \"\"){\n            for(let i = 0; i < colorSizeList.size; i++){\n                const colorCode = colorSizeList.get(i).get('color').get('code');\n                if(colorCode === selectedColor.get('code')){\n                    sizeList = colorSizeList.get(i).get('size').map(\n                        (size, index) => {\n                            const sizeValue = {code: size.get('code'), name: size.get('name')};\n                            return(<option key={index} value={JSON.stringify(sizeValue)}>{size.get('name')}</option>)\n                        }\n                    )\n                }\n            }\n        }\n        const orderOptionList = orderOptions.map(\n            (orderOption, index) => (\n                <div key={index} className={cx('order-option', 'text')}>\n                    <div className={cx('item')}>옵션: {orderOption.get('color').get('name')} / {orderOption.get('size').get('name')}</div>\n                    <div className={cx('item')}>수량: <input name='number' value={orderOption.get('number')} defaultValue={1} className={cx('input-text')} onChange={(e) => onChangeOrderProductNumber({e, index})}/>개</div>\n                    <div className={cx('item')}><button onClick={() => onDeleteOption(index)}><img src=\"http://faso.store/xButton.png\"/></button></div>\n                </div>\n            )\n        );\n        return (\n            <div className={cx('product-info')}>\n                <img src={imagePathUrl} className={cx('product-image')}/>\n                <div className={cx('info')}>\n                    <div className={cx('product-title')}>{title}</div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title1')}>\n                            {constants.TEXT_PRICE}\n                        </div>\n                        <div className={cx('title2')}>{numberFormat.format(price)}원</div>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title1')}>{constants.TEXT_SAVED_MONEY}</div>\n                        <div className={cx('title1')}>\n                            {numberFormat.format((price * savedMoneyRate)/100)}원\n                        </div>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title1')}>{constants.TEXT_DELIVERY_MONEY}</div>\n                        <div className={cx('title1')}>\n                            { price >= constants.DELIVERY_FREE_PRICE ? '무료' : numberFormat.format(constants.DELEVIERY_PRICE) + '원 (50,000원 이상 구매 시 무료)' }\n                        </div>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title1')}>\n                            {constants.TEXT_COLOR}\n                        </div>\n                        <select name=\"selectedColor\" className={cx('select-box')} onChange={onChangeProductInput}>\n                            <option value=\"\" selected={selectedColor.get('code')===''}>{constants.SELECTBOX_DEFAULT}</option>\n                            { colorList }\n                        </select>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title1')}>\n                            {constants.TEXT_SIZE}\n                        </div>\n                        <select name=\"selectedSize\" className={cx('select-box')} onChange={onChangeProductInput}>\n                            <option value=\"\" defaultValue>{constants.SELECTBOX_DEFAULT}</option>\n                            { selectedColor.get('code') && sizeList }\n                        </select>\n                    </div>\n                    <div className={cx('order-options')}>\n                        {orderOptionList}\n                    </div>\n                    <div className={cx('buttons')}>\n                        <button className={cx('button1')}>\n                            {constants.TEXT_CART}\n                        </button>\n                        <button className={cx('button2')} onClick={onPurchase}>\n                            {constants.TEXT_PURCHASE}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default ProductViewInfo;","import React from 'react';\nimport styles from './ProductViewBody.scss';\nimport classNames from 'classnames/bind';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\nconst ProductViewBody = ({product}) => {\n    const { productDetailFiles, description }  = product.toJS();\n    const productDetailImageList = productDetailFiles.map(\n        (productDetailFile, index) => {\n            const { directory, savedFileName } = productDetailFile;\n            const imagePathUrl = constants.IMAGE_GET_API + \"?fileName=\" + encodeURI(directory + savedFileName);\n            return(\n                <img key={index} src={imagePathUrl}/>\n            )\n        }\n    )\n    return(\n        <div className={cx('product-body')}>\n\n            <div className={cx('intro')}>\n                <h1>DETAIL VIEW</h1>\n                <div className={cx('description')}>\n                    {constants.TEXT_BODY_DESCRIPTION}\n                </div>\n            </div>\n            {productDetailImageList}\n            <div className={cx('content')}>\n                {description}\n            </div>\n        </div>\n    )\n}\n\nexport default ProductViewBody;","import React, {Component} from 'react';\nimport ProductViewInfo from 'components/product/ProductViewInfo';\nimport ProductViewBody from 'components/product/ProductViewBody';\nimport Notifications, { notify } from 'react-notify-toast';\nimport * as constants from \"constants/Constants\";\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { bindActionCreators } from 'redux';\nimport * as ProductViewActions from 'store/modules/productView';\nimport * as OrderActions from 'store/modules/order';\nimport {fromJS, List, Map } from \"immutable\";\n\nconst toastColor = {\n    background: '#505050',\n    text: '#fff'\n}\n\nclass ProductViewContainer extends Component {\n    toast = notify.createShowQueue();\n    state = {\n        colorSizeList: fromJS([])\n    };\n    componentDidUpdate(prevProps, prevState){\n        const { productOptions, selectedColor, selectedSize } = this.props;\n        if(prevProps.productOptions !== this.props.productOptions) {\n\n            let colorSizeList = fromJS([]);\n            for(let i = 0; i < productOptions.size; i++){\n                let option = productOptions.get(i);\n                let exist = false;\n\n                for(let j = 0; j < colorSizeList.size; j++){\n                    let item = colorSizeList.get(j);\n                    if(option.get('color').get('code') === item.get('color').get('code')) {\n                        //colorSizeList = colorSizeList.update(j, item => item.set('size', item.get('size').push(option.get('size'))));\n                        colorSizeList = colorSizeList.update(j, item => item.set('size',\n                            item.get('size').push(\n                                Map({\n                                    code: option.get('size').get('code'),\n                                    name: option.get('size').get('name')\n                                })\n                            )));\n                        exist = true;\n                        break;\n                    }\n                }\n                if(exist === false){\n                    colorSizeList = colorSizeList.push(\n                        Map(\n                            {\n                                color: Map(\n                                    {\n                                        code: option.get('color').get('code'),\n                                        name: option.get('color').get('name'),\n                                    }),\n                                size: List([\n                                    Map({\n                                            code: option.get('size').get('code'),\n                                            name: option.get('size').get('name'),\n                                        })\n                                ])\n                            }));\n                }\n            }\n            this.setState({\n                colorSizeList: colorSizeList\n            });\n        }\n        // (prevProps.color !== this.props.color) || (prevProps.size !== this.props.size)\n        if( selectedColor.get('code') != \"\" && selectedSize.get('code') != \"\") {\n            this.handleAddOrderOption({selectedColor, selectedSize});\n        }\n    };\n\n    initialize = async () => {\n        const { ProductViewActions, id } = this.props;\n        try{\n            ProductViewActions.initialize();\n            await ProductViewActions.getProduct(id);\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    componentDidMount() {\n        this.initialize();\n        document.documentElement.scrollTop = 0;\n    };\n\n    handleChangeProductInput = (e) =>{\n        const { ProductViewActions } = this.props;\n        const { value, name } = e.target;\n        if(name === 'selectedColor' || name === 'selectedSize'){\n            ProductViewActions.changeSelectbox({name, value});\n        }\n        else ProductViewActions.changeInput({name, value});\n    };\n\n    handleChangeOrderProductNumber = ({e, index}) =>{\n        const { ProductViewActions } = this.props;\n        const { value, name } = e.target;\n        ProductViewActions.changeOrderProductNumber({name, value, index});\n    };\n\n    handleAddOrderOption = ({selectedColor, selectedSize}) => {\n        const { orderOptions, ProductViewActions } = this.props;\n        for(let i = 0 ; i < orderOptions.size; i++){\n            const color = orderOptions.get(i).get('color');\n            const size = orderOptions.get(i).get('size');\n            if(color.get('code') === selectedColor.get('code') && size.get('code') === selectedSize.get('code')){\n                const msg = constants.WARNING_ADD_ORDER_OPTION;\n                this.toast(msg, 'custom', 2000, toastColor);\n                ProductViewActions.changeInput({name: 'selectedSize', value: Map({code: '', name: ''})});\n                return;\n            }\n        }\n        ProductViewActions.addOrderOption({selectedColor, selectedSize});\n    };\n    handleDeleteOption = (index) => {\n        const { ProductViewActions } = this.props;\n        ProductViewActions.deleteOrderOption(index);\n    };\n    handlePurchase = () => {\n        const { OrderActions, product, orderOptions, history } = this.props;\n        let orderItems = fromJS([]);\n        for(let i = 0; i < orderOptions.size; i++){\n            orderItems = orderItems.push(Map({product: product, color: orderOptions.get(i).get('color'), size: orderOptions.get(i).get('size'), number: orderOptions.get(i).get('number')}));\n        }\n        OrderActions.initializeOrder(orderItems);\n        history.push('/order');\n    };\n\n\n    render() {\n        const { product, selectedColor, orderOptions } = this.props;\n        const { handleChangeProductInput, handleDeleteOption, handleChangeOrderProductNumber, handlePurchase } = this;\n        return (\n            <div>\n                <Notifications />\n                <ProductViewInfo product={product} selectedColor={selectedColor} colorSizeList={this.state.colorSizeList} orderOptions={orderOptions}\n                                 onChangeProductInput={handleChangeProductInput} onDeleteOption={handleDeleteOption} onChangeOrderProductNumber={handleChangeOrderProductNumber}\n                                 onPurchase={handlePurchase}/>\n                <ProductViewBody product={product}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        product: state.productView.get('product'),\n        productOptions: state.productView.get('product').get('options'),\n        selectedColor: state.productView.get('selectedColor'),\n        selectedSize: state.productView.get('selectedSize'),\n        orderOptions: state.productView.get('order').get('options'),\n    }),\n    (dispatch) => ({\n        ProductViewActions: bindActionCreators(ProductViewActions, dispatch),\n        OrderActions: bindActionCreators(OrderActions, dispatch),\n    })\n)(withRouter(ProductViewContainer));\n","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport Wrapper from \"components/common/Wrapper/Wrapper\";\nimport ProductViewContainer from 'containers/product/ProductViewContainer';\n\nconst ProductViewPage = ({match}) => {\n    const { id } = match.params;\n    return (\n        <PageTemplate>\n            <Wrapper>\n                <ProductViewContainer id={id}/>\n            </Wrapper>\n        </PageTemplate>\n    );\n};\n\nexport default ProductViewPage;","import React from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faImages, faImage } from '@fortawesome/free-solid-svg-icons'\nimport classNames from 'classnames/bind';\nimport styles from './FileUploadButton.scss';\n\nconst cx = classNames.bind(styles);\n\nconst FileUploadButton = ({type, onChange, text, name}) => {\n    const button = (type === 'single') ? (<div className='button'>\n            <label htmlFor='single'>\n                <FontAwesomeIcon icon={faImage} color='#3B5998' size='4x' />\n            </label>\n            <input name={name} type='file' id='single' onChange={onChange} />\n        </div>)\n        :\n        (<div className='button'>\n            <label htmlFor='multi'>\n                <FontAwesomeIcon icon={faImages} color='#6d84b4' size='4x' />\n            </label>\n            <input name={name} type='file' id='multi' onChange={onChange} multiple />\n        </div>)\n\n    return (\n        <div className={cx('fileUpload-button')}>\n            {button}\n            <div className={cx('text')}>{text}</div>\n        </div>\n    )\n}\n\nexport default FileUploadButton;\n","import React, {Component} from 'react';\nimport styles from './ProductRegistrationInfo.scss';\nimport classNames from 'classnames/bind';\nimport FileUploadButton from \"components/common/FileUploadButton\";\nimport * as constants from \"constants/Constants\";\nimport xButton from \"resources/images/xButton.PNG\";\nimport { Map, fromJS } from 'immutable';\n\nconst cx = classNames.bind(styles);\n\nclass ProuductRegistrationInfo extends Component {\n    render() {\n        const { product, productFiles, categories, colorData, sizeData, onChangeProductInput, onAddOption, onDeleteOption, onImageUpload } = this.props;\n        const productImagePreview = productFiles.get('productImagePreview');\n        const categoryList = categories.map((category, index) => {\n            const categoryValue = {code: category.get('code'), name: category.get('name')};\n            return(<option key={index} value={JSON.stringify(categoryValue)}>{category.get('name')}</option>)\n        });\n        const colorList = colorData.map((color, index) => {\n            const colorValue = {code: color.get('code'), name: color.get('name')};\n            return(<option key={index} value={JSON.stringify(colorValue)}>{color.get('name')}</option>)\n        });\n        const sizeList = sizeData.map((size, index) => {\n            const sizeValue = {code: size.get('code'), name: size.get('name')};\n            return(<option key={index} value={JSON.stringify(sizeValue)}>{size.get('name')}</option>)\n        });\n        const optionList = product.get('options').map(\n            (option, index) => (\n                <div key={index} className={cx('option')}>\n                    <div className={cx('option-factor')}>\n                        <div className={cx('option-title')}>{constants.TEXT_COLOR}:</div>\n                        <div className={cx('option-choice')}>{option.get('color').get('name')}</div>\n                    </div>\n                    <div className={cx('option-factor')}>\n                        <div className={cx('option-title')}>{constants.TEXT_SIZE}:</div>\n                        <div className={cx('option-choice')}>{option.get('size').get('name')}</div>\n                    </div>\n                    <div className={cx('option-factor')}>\n                        <div className={cx('option-title')}>{constants.TEXT_NUMBER}:</div>\n                        <div className={cx('option-choice')}>{option.get('number')}</div>\n                    </div>\n                    <div className={cx('option-factor')}>\n                        <button onClick={() => onDeleteOption(index)}><img src=\"http://faso.store/xButton.png\"/></button>\n                    </div>\n                </div>\n            )\n        );\n        const noImageUrl = constants.BASE_URL + \"common/no_image.jpg\";\n\n        return (\n            <div className={cx('product-registration-info')}>\n                <div className={cx('product-image')}>\n                    { /* 조건에 따른 렌더링 */\n                        productImagePreview ? <img src={productImagePreview} className={cx('preview-image')}/> : <img src={noImageUrl} className={cx('preview-image')}/>\n                    }\n                    <FileUploadButton name=\"productImage\" type=\"single\" text={constants.TEXT_IMAGE_UPLOAD} onChange={onImageUpload}/>\n                </div>\n                <div className={cx('info')}>\n                    <input name='title' value={product.get('title')} placeholder={constants.INPUT_TEXT_PLACEHOLDER_TITLE} className={cx('input-title')} onChange={onChangeProductInput}/>\n                    <div className={cx('text')}>{constants.TEXT_BASIC_INFO}</div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_CATEGORY}\n                        </div>\n                        <select name=\"category\" className={cx('select-box')} onChange={onChangeProductInput}>\n                            <option value=\"\" defaultValue>{constants.SELECTBOX_DEFAULT}</option>\n                            {categoryList}\n                        </select>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_PRICE}\n                        </div>\n                        <input name='price' value={product.get('price')} placeholder={constants.INPUT_TEXT_PLACEHOLDER_PRICE} className={cx('input-text')} onChange={onChangeProductInput}/>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_SAVED_MONEY}\n                        </div>\n                        <input name='savedMoneyRate' value={product.get('savedMoneyRate')} placeholder={constants.INPUT_TEXT_PLACEHOLDER_SAVED_MONEY} className={cx('input-text')} onChange={onChangeProductInput}/>\n                    </div>\n\n                    <div className={cx('text')}>{constants.TEXT_OPTION}</div>\n\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_COLOR}\n                        </div>\n                        <select name=\"color\" className={cx('select-box')} onChange={onChangeProductInput}>\n                            <option value=\"\" selected={product.get('color').get('code') === ''}>{constants.SELECTBOX_DEFAULT}</option>\n                            {colorList}\n                        </select>\n                    </div>\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_SIZE}\n                        </div>\n                        <select name=\"size\" className={cx('select-box')} onChange={onChangeProductInput}>\n                            <option value=\"\" selected={product.get('size').get('code') === ''}>{constants.SELECTBOX_DEFAULT}</option>\n                            {sizeList}\n                        </select>\n                    </div>\n\n                    <div className={cx('info-sub')}>\n                        <div className={cx('title')}>\n                            {constants.TEXT_NUMBER}\n                        </div>\n                        <input name='number' value={product.get('number')} placeholder={constants.INPUT_TEXT_PLACEHOLDER_NUMBER} className={cx('input-text')} onChange={onChangeProductInput}/>\n                    </div>\n                    <div className={cx('options')}>\n                        {optionList}\n                    </div>\n                    <div className={cx('buttons')}>\n                        <button className={cx('button1')} onClick={onAddOption}>\n                            {constants.TEXT_OPTION_ADD}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default ProuductRegistrationInfo;","import React from 'react';\nimport styles from './ProductRegistrationBody.scss';\nimport classNames from 'classnames/bind';\nimport FileUploadButton from \"components/common/FileUploadButton\";\nimport * as constants from \"constants/Constants\";\nconst cx = classNames.bind(styles);\n\nconst ProductRegistrationBody = ({productFiles, onImageUpload, onChangeProductInput, onAddProduct}) => {\n    const productDetailImagesPreview = productFiles.get('productDetailImagesPreview').map(\n        (productDetailImagePreview, index) => (\n            <img src={productDetailImagePreview} />\n        )\n    );\n\n    return (\n        <div className={cx('product-body')}>\n            <div className={cx('content-inner')}>\n                <h3 >{constants.TEXT_DESCRIPTION_DETAIL_IMAGE}</h3>\n\n                { /* 조건에 따른 렌더링 */\n                    productDetailImagesPreview && productDetailImagesPreview\n                }\n                <div className={cx('fileUpload-button')}>\n                <FileUploadButton name=\"productDetailImages\" type=\"multi\" text={constants.TEXT_IMAGE_UPLOAD} onChange={onImageUpload}/>\n                </div>\n            </div>\n            <div className={cx('content-inner')}>\n                <h3>{constants.TEXT_DESCRIPTION_DETAIL_TEXT}</h3>\n                <textarea name=\"description\" onChange={onChangeProductInput}/>\n                <button onClick={onAddProduct}>\n                    {constants.TEXT_PRODUCT_ADD}\n                </button>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductRegistrationBody;","import React, {Component} from 'react';\nimport ProductRegistrationInfo from 'components/product/ProductRegistrationInfo';\nimport ProductRegistrationBody from 'components/product/ProductRegistrationBody';\nimport Notifications, { notify } from 'react-notify-toast';\nimport * as constants from \"constants/Constants\";\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { withRouter } from 'react-router-dom';\nimport * as productRegistrationActions from 'store/modules/productRegistration';\n\nconst toastColor = {\n    background: '#505050',\n    text: '#fff'\n};\n\nclass ProductRegistrationContainer extends Component {\n    toast = notify.createShowQueue();\n    handleImageUpload = (e) => {\n        const { ProductRegistrationActions } = this.props;\n        const { name, id, files } = e.target;\n        e.preventDefault();\n        //const files = Array.from(e.target.files);\n        if (files.length > 10 ) {\n            const msg = 'Only 10 images can be uploaded at a time';\n            return this.toast(msg, 'custom', 2000, toastColor)\n        }\n\n        if(id === 'single'){\n            const file = files[0];\n            const fileUrl = URL.createObjectURL(file);\n            ProductRegistrationActions.addSingleImage({name, fileUrl, file});\n        }else{\n            for(let i =0; i<files.length;i++){\n                const file = files[i];\n                const fileUrl = URL.createObjectURL(file);\n                ProductRegistrationActions.addMultiImage({name, fileUrl, file});\n            }\n        }\n    };\n    handleDeleteOption = (index) => {\n        const { ProductRegistrationActions } = this.props;\n        ProductRegistrationActions.deleteOption(index);\n    };\n    handleAddOption = () => {\n        const { product, ProductRegistrationActions } = this.props;\n        const color = product.get('color');\n        const size = product.get('size');\n        const number = product.get('number');\n        if(color === '' || size === ''|| number === ''){\n            alert('색상, 사이즈, 판매수량 모두 입력하세요.');\n            return;\n        }\n        ProductRegistrationActions.addOption({color, size, number})\n    };\n    handleChangeProductInput = (e) => {\n        const { ProductRegistrationActions } = this.props;\n        const { value, name } = e.target;\n        if(name === 'category' || name === 'color' || name === 'size'){\n            ProductRegistrationActions.changeSelectbox({name, value});\n        }\n        else ProductRegistrationActions.changeInput({name, value});\n    };\n    handleSubmit = async() => {\n        const {  productFiles, ProductRegistrationActions, history } = this.props;\n        let { product } = this.props;\n\n        const title = product.get('title');\n        const category = product.get('category').get('code');\n        const price = product.get('price');\n        const savedMoneyRate = product.get('savedMoneyRate');\n        const options = product.get('options');\n        const productImage = productFiles.get('productImage');\n        const productDetailImages = productFiles.get('productDetailImages');\n\n        if(title === '' || category === '' || price === '' || savedMoneyRate === ''){\n            this.toast(constants.WARNING_ADD_PRODUCT, 'custom', 2000, toastColor);\n            return;\n        }\n        if(options.size === 0){\n            this.toast(constants.WARNING_ADD_PRODUCT_OPTION, 'custom', 2000, toastColor);\n            return;\n        }\n        if(productImage === '' || productDetailImages.size === 0){\n            this.toast(constants.WARNING_ADD_PRODUCT_IMAGE, 'custom', 2000, toastColor);\n            return;\n        }\n\n        product = product.set('createdId', sessionStorage.getItem('id'));\n        let formData = new FormData();\n        formData.append('productFile', productImage);\n        formData.append('product', new Blob([JSON.stringify(product)], {\n            type: \"application/json\"\n        }));\n\n        for(let i = 0; i < productDetailImages.size; i++){\n            formData.append('productDetailFiles', productDetailImages.get(i));\n        }\n        try{\n            await ProductRegistrationActions.addProduct(formData);\n            history.push(`/product/${this.props.productId}`);\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    initialize = async () => {\n        const { ProductRegistrationActions } = this.props;\n        try{\n            ProductRegistrationActions.initialize();\n            await ProductRegistrationActions.getOptionList();\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const { error, history } = this.props;\n        if(prevProps.error !== this.props.error){\n            const errorStatus = error.get('status');\n            if(errorStatus === 401) history.push('/login')\n        }\n    }\n\n    render() {\n        const { product, productFiles, categories, colorData, sizeData } = this.props;\n        const { handleChangeProductInput, handleAddOption, handleDeleteOption, handleImageUpload, handleSubmit } = this;\n        return (\n            <div>\n                <Notifications />\n                <ProductRegistrationInfo product={product} productFiles={productFiles} categories={categories} colorData={colorData} sizeData={sizeData}\n                             onChangeProductInput={handleChangeProductInput} onAddOption={handleAddOption} onDeleteOption={handleDeleteOption} onImageUpload={handleImageUpload}/>\n                <ProductRegistrationBody productFiles={productFiles} onChangeProductInput={handleChangeProductInput} onImageUpload={handleImageUpload} onAddProduct={handleSubmit}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        product: state.productRegistration.get('product'),\n        productFiles: state.productRegistration.get('productFiles'),\n        categories: state.productRegistration.get('categories'),\n        colorData: state.productRegistration.get('colorData'),\n        sizeData: state.productRegistration.get('sizeData'),\n        productId: state.productRegistration.get('productId'),\n        error: state.productRegistration.get('error'),\n    }),\n    (dispatch) => ({\n        ProductRegistrationActions: bindActionCreators(productRegistrationActions, dispatch)\n    })\n)(withRouter(ProductRegistrationContainer));\n","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport Wrapper from \"components/common/Wrapper/Wrapper\";\nimport ProductRegistrationContainer from 'containers/product/ProductRegistrationContainer';\n\nconst ProductRegistrationPage = () => {\n    return (\n        <PageTemplate>\n            <Wrapper>\n                <ProductRegistrationContainer/>\n            </Wrapper>\n        </PageTemplate>\n    );\n};\n\nexport default ProductRegistrationPage;","import React from 'react';\nimport styles from './Login.scss';\nimport classNames from 'classnames/bind';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\n\nconst Login = ({visible, userId, password, error, onLogin, onChange, onKeyPress}) => {\n    const handleChange = (e) => {\n        const { value, name } = e.target;\n        onChange({name, value});\n    }\n    return(\n        <div className={cx('form')}>\n            {/*<div onClick={onCancel} className={cx('close')}>&times;</div>*/}\n            <div className={cx('title')}>로그인</div>\n            <div className={cx('description')}>아이디, 비밀번호를 입력하세요</div>\n            <input name = 'userId' autoFocus type=\"text\" placeholder=\"아이디 입력\" value={userId} onChange={handleChange} onKeyPress={onKeyPress}/>\n            <input name = 'password' type=\"password\" placeholder=\"비밀번호 입력\" value={password} onChange={handleChange} onKeyPress={onKeyPress}/>\n            {error && <div className={cx('error')}>로그인 실패</div>}\n            <button name = \"classic\" className={cx('login')} onClick={onLogin}>로그인</button>\n            <button name='google' onClick={onLogin} className={cx('login-btn', 'google')} >구글계정으로 로그인</button>\n            <button name='facebook' onClick={onLogin} className={cx('login-btn', 'facebook')}>페이스북으로 로그인</button>\n            <button name='kakao' onClick={onLogin} className={cx('login-btn', 'kakao')}>카카오톡으로 로그인</button>\n        </div>\n    )\n};\n\nexport default Login;","import React, {Component} from 'react';\nimport Login from 'components/login/Login';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from 'store/modules/base';\nimport { withRouter } from 'react-router-dom';\nimport * as constants from \"constants/Constants\";\n\nclass LoginContainer extends Component {\n    handleLogin = async (e) => {\n        const { BaseActions, userId, password, history } = this.props;\n        const { name } = e.target;\n        try{\n            if(name === \"classic\"){\n                await BaseActions.login({userId, password});\n                history.push('/');\n            }else{\n                window.location.href = \"/oauth2/authorization/\" + name;// + '?redirect_uri=' + constants.OAUTH2_REDIRECT_URI;\n                BaseActions.hideModal('login');\n            }\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    handleChange = ({name, value}) => {\n        const { BaseActions } = this.props;\n        BaseActions.changeInputLogin({name, value});\n    };\n    handleKeyPress = (e) => {\n        if(e.key === 'Enter'){\n            this.handleLogin();\n        }\n    };\n    render() {\n        const {\n            handleLogin, handleChange, handleKeyPress\n        } = this;\n        const { error, loginId, password } = this.props;\n\n        return (\n            <Login\n                onLogin={handleLogin}\n                onChange={handleChange} onKeyPress={handleKeyPress}\n                error={error} loginId= {loginId} password={password}\n            />\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        userId: state.base.getIn(['login', 'userId']),\n        password: state.base.getIn(['login', 'password']),\n        error: state.base.getIn(['login', 'error'])\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(withRouter(LoginContainer));","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport LoginContainer from 'containers/login/LoginContainer'\n\nconst LoginPage = () => {\n    return (\n        <PageTemplate>\n            <LoginContainer/>\n        </PageTemplate>\n    );\n};\n\nexport default LoginPage;","import React, {Component} from 'react';\nimport styles from './SignupTemplate.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nclass SignupTemplate extends Component {\n\n    render() {\n        const { children } = this.props;\n        return (\n            <div className={cx('signup-template')}>\n                <main>\n                    {children}\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default SignupTemplate;","import React from 'react';\nimport styles from './SignupBody.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nconst SignupBody = ({userId, name, password, onSignup, onChangeInput}) => {\n    // const handleChange = (e) => {\n    //     const { value, name } = e.target;\n    //     onChangeInput({name, value});\n    // }\n    return(\n        <div className={cx('signup-body')}>\n            <div className={cx('content')}>\n                <h1>Sign Up</h1>\n                <div className={cx('input-box')}>\n                    <div className={cx('input-title')}>아이디</div>\n                    <input name = 'userId' autoFocus type=\"text\" value={userId} placeholder=\"ID\" onChange={onChangeInput}/>\n                </div>\n                <div className={cx('input-box')}>\n                    <div className={cx('input-title')}>비밀번호</div>\n                    <input name = 'password' type=\"password\" value={password} placeholder=\"password\" onChange={onChangeInput}/>\n                </div>\n                <div className={cx('input-box')}>\n                    <div className={cx('input-title')}>이름</div>\n                    <input name = 'name' type=\"text\" value={name} placeholder=\"Name\" onChange={onChangeInput}/>\n                </div>\n                {/*{error && <div className={cx('error')}>로그인 실패</div>} */}\n                <button onClick={onSignup}>Sign up</button>\n            </div>\n        </div>\n\n    )\n};\n\nexport default SignupBody;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as baseActions from 'store/modules/base';\nimport SignupBody from 'components/signup/SignupBody';\nimport { withRouter } from 'react-router-dom';\n\nclass SignupContainer extends Component {\n    handleChangeInput = (e) =>{\n        const { BaseActions } = this.props;\n        const { value, name } = e.target;\n        BaseActions.changeInputSignup({name, value});\n    };\n\n    handleSignup = async() => {\n        const { userId, name, password, history, BaseActions } = this.props;\n        try{\n            await BaseActions.signup({userId, password, name});\n            history.push('/');\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    render() {\n        const { userId, password, name } = this.props;\n        const { handleSignup, handleChangeInput } = this;\n        return (\n            <div>\n                <SignupBody userId={userId} name={name} password={password} onSignup={handleSignup} onChangeInput={handleChangeInput}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        userId: state.base.getIn(['signup', 'userId']),\n        name: state.base.getIn(['signup', 'name']),\n        password: state.base.getIn(['signup', 'password']),\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(withRouter(SignupContainer));\n","import React from 'react';\nimport SignupTemplate from \"../components/signup/SignupTemplate/SignupTemplate\";\nimport SignupContainer from 'containers/signup/SignupContainer';\nimport Wrapper from \"components/common/Wrapper\";\nimport HeaderContainer from 'containers/common/HeaderContainer'\n\nconst SignupPage = () => {\n    return (\n        <SignupTemplate>\n            <HeaderContainer/>\n            <Wrapper>\n                <SignupContainer/>\n            </Wrapper>\n        </SignupTemplate>\n    );\n};\n\nexport default SignupPage;","import React from 'react';\nimport styles from './OrderList.scss';\nimport classNames from 'classnames/bind';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\nconst numberFormat = new Intl.NumberFormat();\n\nconst OrderItem = ({productFile = \"\", title, price, color, size, number}) => {\n    let thumbnailUrl = \"\";\n    if(productFile != \"\"){\n        const { directory, thumbnailSavedFileName } = productFile;\n        thumbnailUrl = constants.IMAGE_GET_API + \"?fileName=\" + encodeURI(directory + thumbnailSavedFileName);\n    }\n    return (\n        <div className={cx('order-item')}>\n            <img src={thumbnailUrl}/>\n            <div className={cx('order-content')}>{title}</div>\n            <div className={cx('order-option')}>{color.name} / {size.name}</div>\n            <div className={cx('order-amount')}>수량 {number}개</div>\n            <div className={cx('order-price')}>{numberFormat.format(price)}원</div>\n        </div>\n    )\n}\n\nconst OrderList = ({orderItems}) => {\n    let orderItemList = \"\";\n    if(orderItems.size > 0){\n        orderItemList = orderItems.map(\n            (order, index) => {\n                const { product, color, size, number } = order.toJS();\n                const { productFile, title, price } = product;\n                return (\n                    <OrderItem\n                        key={index}\n                        productFile={productFile}\n                        title={title}\n                        price={price}\n                        color={color}\n                        size={size}\n                        number={number}\n                    />\n                )\n            }\n        )\n    }\n\n    return (\n        <div>\n            <div className={cx('order-list-header')}>주문상품: {orderItemList.size}개</div>\n            <div className={cx('order-list-content')}>\n                {orderItemList}\n            </div>\n        </div>\n    );\n};\n\nexport default OrderList;","import React from 'react';\nimport styles from './OrderInfo.scss';\nimport classNames from 'classnames/bind';\nimport Button from \"components/common/Button\";\nimport { Link } from 'react-router-dom';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\n\nconst OrderInfo = ({ zipcode, address, phoneFirstNumberTypes, onPostCode, onChangeInput}) => {\n    const phoneFirstNumberTypeList = phoneFirstNumberTypes.map(\n        (phoneFirstNumberType, index) => {\n            return (<option key={index} value={phoneFirstNumberType.get('code')}>{phoneFirstNumberType.get('code')}</option>)\n        }\n    );\n    return (\n        <div>\n            <div className={cx('order-info-header')}>받는분 정보</div>\n            <div className={cx('order-info-content')}>\n                <div className={cx('order-info-list')}>\n                    <div className={cx('term')}>주문자 이름</div>\n                    <input type=\"text\" name=\"ordererName\" className={cx('input')} placeholder=\"이름\" onChange={onChangeInput}/>\n                </div>\n                <div className={cx('order-info-list')}>\n                    <div className={cx('term')}>주소</div>\n                    <div className={cx('order-info-sub')}>\n                        <div className={cx('order-info-postcode')}>\n                            <input type=\"text\" name=\"zipcode\" value={zipcode} className={cx('input')} placeholder=\"우편번호\" disabled/>\n                            <Button onClick={onPostCode} theme=\"default\">우편번호 찾기</Button>\n                        </div>\n                        <input type=\"text\" name=\"address\" value={address} className={cx('input')} placeholder=\"주소\" disabled/>\n                        <input type=\"text\" name=\"detailAddress\" className={cx('input')} placeholder=\"상세주소\" onChange={onChangeInput}/>\n                    </div>\n                </div>\n                <div className={cx('order-info-list')}>\n                    <div className={cx('term')}>휴대전화</div>\n                    <select name=\"mobileNo1\" className={cx('input')} onChange={onChangeInput}>\n                        {phoneFirstNumberTypeList}\n                    </select>\n                    <input type=\"text\" name=\"mobileNo2\" className={cx('input')} onChange={onChangeInput}/>\n                    <input type=\"text\" name=\"mobileNo3\" className={cx('input')} onChange={onChangeInput}/>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderInfo;","import React, {Component} from 'react';\nimport styles from './ModalWrapper.scss';\nimport classNames from 'classnames/bind';\n\nconst cx = classNames.bind(styles);\n\nclass ModalWrapper extends Component {\n    state = {\n        animate: false\n    }\n    startAnimation = () => {\n        this.setState({\n            animate: true\n        });\n\n        setTimeout(() => {\n            this.setState({\n                animate: false\n            });\n        }, 250)\n    }\n\n    componentDidUpdate(prevProps, prevState){\n        if(prevProps.visible !== this.props.visible){\n            this.startAnimation();\n        }\n    }\n    render() {\n        const { children, visible } = this.props;\n        const { animate } = this.state;\n\n        if(!visible && !animate) return null;\n\n        const animation = animate && (visible ? 'enter' : 'leave');\n        return (\n            <div>\n                <div className={cx('gray-background')}/>\n                <div className={cx('modal-wrapper')}>\n                    <div className={cx('modal', animation)}>\n                        {children}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ModalWrapper;","import React, {Component} from 'react';\nimport styles from './PostCodeModal.scss';\nimport classNames from 'classnames/bind';\nimport ModalWrapper from 'components/modal/ModalWrapper';\nimport Button from \"../../common/Button/Button\";\nimport DaumPostcode from 'react-daum-postcode';\n\nconst cx = classNames.bind(styles);\n\nconst PostCodeModal = ({visible, onCancel, onAddress}) => (\n    <ModalWrapper visible={visible}>\n        <DaumPostcode onComplete={onAddress} autoClose/>\n        <div className={cx('options')}>\n            <Button theme=\"gray\" onClick={onCancel}>닫기</Button>\n        </div>\n    </ModalWrapper>\n);\n\nexport default PostCodeModal;","import React from 'react';\nimport styles from './PaymentInfo.scss';\nimport classNames from 'classnames/bind';\nimport Button from \"components/common/Button\";\nimport { Link } from 'react-router-dom';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\nconst numberFormat = new Intl.NumberFormat();\n\nconst PaymentInfo = ({paymentWays, bankBooks, totalPrice, depositorName, selectedBankBook, selectedPayment, onChangeObject, onChangeInput, onPayment }) => {\n    const paymentWayList = paymentWays.map(\n        (paymentWay) => (\n            <label className={cx('radio-box')}>\n                <input name=\"selectedPayment\" type=\"radio\" checked={selectedPayment.get('code') === paymentWay.get('code')} name=\"selectedPayment\" value={JSON.stringify(paymentWay)} onChange={onChangeObject}/>\n                {paymentWay.get('name')}\n            </label>\n        )\n    );\n    const bankBookList = bankBooks.map(\n        (bankBook, index) => {\n            const showValue = bankBook.get('bankName') + \":\" + bankBook.get('bankAccount') + \" \" + bankBook.get('accountHolder');\n            return (<option key={index} value={JSON.stringify(bankBook)} selected={bankBook.get('code') === selectedBankBook}>{showValue}</option>)\n        }\n    );\n\n    return (\n        <div>\n            <div className={cx('payment-header')}>결제수단</div>\n\n            <div className={cx('payment-content')}>\n                <div className={cx('payment-way')}>\n                    <div className={cx('radio-group')}>\n                        {paymentWayList}\n                    </div>\n                    {\n                        (selectedPayment.get('code') === 'no_bankbook') &&\n                        <div className={cx('no-bankbook')}>\n                            <div className={cx('no-bankbook-sub')}>\n                                <div className={cx('term')}>입금자명</div>\n                                <input type=\"text\" name='depositorName' value={depositorName} onChange={onChangeInput}/>\n                            </div>\n                            <div className={cx('no-bankbook-sub')}>\n                                <div className={cx('term')}>입금은행</div>\n                                <select name=\"selectedBankBook\" className={cx('bank') } onChange={onChangeObject}>\n                                    {bankBookList}\n                                </select>\n                            </div>\n                        </div>\n                    }\n                    {\n                        (selectedPayment.get('code') !== 'no_bankbook') && <div className={cx('message')}>추후 구현 예정입니다.</div>\n                    }\n                </div>\n                <div className={cx('payment-info')}>\n                    <div className={cx('term', 'payment-info-sub')}>최종결제 금액</div>\n                    { totalPrice < 50000 && <div className={cx('term', 'payment-info-sub')}>배송비: 2500원</div> }\n                    <div className={cx('term-price', 'payment-info-sub')}>{ totalPrice < 50000 ? numberFormat.format(totalPrice + 2500) : numberFormat.format(totalPrice)}원</div>\n                    <button onClick={onPayment}>결제하기</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default PaymentInfo;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from 'store/modules/order';\nimport * as constants from \"constants/Constants\";\nimport { withRouter } from 'react-router-dom';\nimport Notifications, { notify } from 'react-notify-toast';\nimport OrderList from \"components/order/OrderList\";\nimport OrderInfo from \"components/order/OrderInfo\";\nimport PostCodeModal from \"components/modal/PostCodeModal\";\nimport PaymentInfo from \"components/order/PaymentInfo\";\n\nconst toastColor = {\n    background: '#505050',\n    text: '#fff'\n};\n\nclass OrderContainer extends Component {\n    toast = notify.createShowQueue();\n    initialize = async () => {\n        const { OrderActions } = this.props;\n        try{\n            await OrderActions.getOptionList();\n            this.calculateTotalPrice();\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    componentDidMount() {\n        this.initialize();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { error, history } = this.props;\n        if(prevProps.error !== this.props.error){\n            const errorStatus = error.get('status');\n            if(errorStatus === 401) history.push('/login')\n        }\n    };\n    calculateTotalPrice = () => {\n        const { OrderActions, orderItems } = this.props;\n        let totalPrice = 0;\n        for(let i = 0; i < orderItems.size; i++){\n            let price = orderItems.get(i).get('product').get('price');\n            let number = orderItems.get(i).get('number');\n            totalPrice += (price * number);\n        }\n        OrderActions.changeInput({name: 'totalPrice', value: totalPrice});\n    };\n\n    handlePostCode = () => {\n        const { OrderActions } = this.props;\n        OrderActions.showModal();\n    };\n    handleCancel = () => {\n        const { OrderActions } = this.props;\n        OrderActions.hideModal();\n    };\n    handleChangeInput = (e) =>{\n        const { OrderActions } = this.props;\n        const { value, name } = e.target;\n        OrderActions.changeInput({name, value});\n    }\n    handleChangeObject = (e) => {\n        const { OrderActions } = this.props;\n        const { value, name } = e.target;\n        OrderActions.changeObject({name, value});\n        //obj[event.target.value] = event.target.checked // true\n\n    };\n\n    handleAddress = (data) => {\n        const { OrderActions } = this.props;\n        let addr = ''; // 주소 변수\n        let extraAddr = ''; // 참고항목 변수\n\n        //사용자가 선택한 주소 타입에 따라 해당 주소 값을 가져온다.\n        if (data.userSelectedType === 'R') { // 사용자가 도로명 주소를 선택했을 경우\n            addr = data.roadAddress;\n        } else { // 사용자가 지번 주소를 선택했을 경우(J)\n            addr = data.jibunAddress;\n        }\n\n        // 사용자가 선택한 주소가 도로명 타입일때 참고항목을 조합한다.\n        if(data.userSelectedType === 'R'){\n            // 법정동명이 있을 경우 추가한다. (법정리는 제외)\n            // 법정동의 경우 마지막 문자가 \"동/로/가\"로 끝난다.\n            if(data.bname !== '' && /[동|로|가]$/g.test(data.bname)){\n                extraAddr += data.bname;\n            }\n            // 건물명이 있고, 공동주택일 경우 추가한다.\n            if(data.buildingName !== '' && data.apartment === 'Y'){\n                extraAddr += (extraAddr !== '' ? ', ' + data.buildingName : data.buildingName);\n            }\n            // 표시할 참고항목이 있을 경우, 괄호까지 추가한 최종 문자열을 만든다.\n            if(extraAddr !== ''){\n                extraAddr = ' (' + extraAddr + ')';\n            }\n            // 조합된 참고항목을 해당 필드에 넣는다.\n\n            //document.getElementById(\"sample6_extraAddress\").value = extraAddr;\n\n        } else {\n            //document.getElementById(\"sample6_extraAddress\").value = '';\n        }\n\n        // 우편번호와 주소 정보를 해당 필드에 넣는다.\n        let name = 'zipcode';\n        let value = data.zonecode;\n        OrderActions.changeInput({name, value});\n\n        name = 'address';\n        value = addr;\n        OrderActions.changeInput({name, value});\n        this.handleCancel();\n    };\n\n    handlePayment = async() => {\n        const { orderItems, ordererName, zipcode, address, detailAddress, mobileNo1, mobileNo2, mobileNo3, selectedPayment, totalPrice, OrderActions, history  } = this.props;\n        if(ordererName === '' || zipcode === '' || address === '' || detailAddress === '' || mobileNo2 === '' || mobileNo3 === ''){\n            this.toast(constants.WARNING_ADD_ORDER_ORDERER_INFO, 'custom', 2000, toastColor);\n            return;\n        }\n        if(selectedPayment.get('code') !== 'no_bankbook') return this.toast(constants.WARNING_ADD_ORDER_PAYMENT_WAY, 'custom', 2000, toastColor);\n        else{\n            const { depositorName, selectedBankBook } = this.props;\n            if(depositorName === '') return this.toast(constants.WARNING_ADD_ORDER_PAYMENT_DEPOSITORNAME, 'custom', 2000, toastColor);\n            const userId = sessionStorage.getItem('id');\n            let order = { ordererName, zipcode, address, detailAddress, mobileNo1, mobileNo2, mobileNo3,\n                            selectedPayment, depositorName, selectedBankBook, totalPrice, userId, orderItems };\n            try{\n                await OrderActions.addOrder(order);\n                history.push('/order/complete');\n            }catch(e){\n                console.log(e);\n            }\n        }\n    };\n\n    render() {\n        const { handleAddress, handleChangeInput, handlePostCode, handleCancel, handleChangeObject, handlePayment } = this;\n        const { orderItems, visible, zipcode, address, selectedPayment, depositorName, selectedBankBook, totalPrice, paymentWays, bankBooks, phoneFirstNumberTypes } = this.props;\n        return (\n            <div>\n                <Notifications />\n                <OrderList orderItems={orderItems}/>\n                <OrderInfo zipcode={zipcode} address={address} phoneFirstNumberTypes={phoneFirstNumberTypes}\n                           onPostCode={ handlePostCode } onChangeInput={handleChangeInput} />\n                <PaymentInfo paymentWays={paymentWays} bankBooks={bankBooks}  selectedPayment={selectedPayment} depositorName={depositorName} selectedBankBook={selectedBankBook} totalPrice={totalPrice}\n                             onChangeObject={handleChangeObject} onChangeInput={handleChangeInput} onPayment={handlePayment}/>\n                <PostCodeModal visible={ visible } onCancel={ handleCancel } onAddress={ handleAddress }/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        orderItems: state.order.get('orderItems'),\n        visible: state.order.get('modalPostCode'),\n        ordererName: state.order.get('ordererName'),\n        zipcode: state.order.get('zipcode'),\n        address: state.order.get('address'),\n        detailAddress: state.order.get('detailAddress'),\n        mobileNo1: state.order.get('mobileNo1'),\n        mobileNo2: state.order.get('mobileNo2'),\n        mobileNo3: state.order.get('mobileNo3'),\n\n        selectedPayment: state.order.get('selectedPayment'),\n        depositorName: state.order.get('depositorName'),\n        selectedBankBook: state.order.get('bankBook'),\n\n        totalPrice: state.order.get('totalPrice'),\n\n        paymentWays: state.order.get('paymentWays'),\n        bankBooks: state.order.get('bankBooks'),\n        phoneFirstNumberTypes: state.order.get('phoneFirstNumberTypes'),\n        error: state.order.get('error'),\n    }),\n    (dispatch) => ({\n        OrderActions: bindActionCreators(orderActions, dispatch),\n    })\n)(withRouter(OrderContainer));","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport Wrapper from \"components/common/Wrapper/Wrapper\";\nimport OrderContainer from 'containers/order/OrderContainer';\n\nconst OrderPage = () => {\n    return (\n        <PageTemplate>\n            <Wrapper title=\"결제하기\">\n                <OrderContainer/>\n            </Wrapper>\n        </PageTemplate>\n    );\n};\n\nexport default OrderPage;","import React from 'react';\nimport styles from './OrderComplete.scss';\nimport classNames from 'classnames/bind';\nimport Button from \"components/common/Button\";\nimport { Link } from 'react-router-dom';\nimport * as constants from \"constants/Constants\";\n\nconst cx = classNames.bind(styles);\n\nconst OrderComplete = ({ depositorName, selectedPayment, selectedBankBook, name }) => {\n    let accountInfo = \"\";\n    if(selectedBankBook !== \"\") accountInfo = selectedBankBook.get('bankName') + \" \" + selectedBankBook.get('bankAccount')\n\n    return (\n        <div className={cx('order-complete-content')}>\n            <div className={cx('info')}>\n                <div className={cx('label-header')}>\n                    {name\n                    } 고객님, 주문이 완료되었습니다.<br/>\n                    입금이 완료되면 배송이 진행됩니다.\n                </div>\n                <ul>\n                    <li>결제수단:{selectedPayment.get('name')}</li>\n                    <li>예금주:<strong>{selectedBankBook.get('accountHolder')}</strong></li>\n                    <li>입금계좌:{accountInfo}</li>\n                </ul>\n            </div>\n        </div>\n    );\n};\n\nexport default OrderComplete;","import React, {Component} from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as orderActions from 'store/modules/order';\nimport * as constants from \"constants/Constants\";\nimport OrderComplete from \"components/order/OrderComplete\";\n\nclass OrderCompleteContainer extends Component {\n\n    initialize = async () => {\n        const { OrderActions } = this.props;\n        try{\n\n        }catch(e){\n            console.log(e);\n        }\n    }\n\n    componentDidMount() {\n        this.initialize();\n    }\n\n\n    render() {\n        const { depositorName, selectedPayment, selectedBankBook} = this.props;\n        const name = sessionStorage.getItem('name');\n        return (\n            <div>\n                <OrderComplete depositorName={depositorName} selectedPayment={selectedPayment} selectedBankBook={selectedBankBook} name={name}/>\n            </div>\n        );\n    }\n}\n\nexport default connect(\n    (state) => ({\n        depositorName: state.order.get('depositorName'),\n        selectedPayment: state.order.get('selectedPayment'),\n        selectedBankBook: state.order.get('selectedBankBook'),\n    }),\n    (dispatch) => ({\n\n    })\n)(OrderCompleteContainer);","import React from 'react';\nimport PageTemplate from 'components/common/PageTemplate';\nimport Wrapper from \"components/common/Wrapper/Wrapper\";\nimport OrderCompleteContainer from 'containers/order/OrderCompleteContainer';\n\nconst OrderCompletePage = () => {\n    return (\n        <PageTemplate>\n            <Wrapper title=\"주문완료\">\n                <OrderCompleteContainer/>\n            </Wrapper>\n        </PageTemplate>\n    );\n};\n\nexport default OrderCompletePage;","import React from 'react';\n\nconst NotFoundPage = () => {\n    return (\n        <div>\n            NotFound\n        </div>\n    );\n};\n\nexport default NotFoundPage;","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom'\nimport {connect} from \"react-redux\";\nimport {bindActionCreators} from \"redux\";\nimport * as baseActions from 'store/modules/base';\n\n\nclass OAuth2RedirectHandler extends Component {\n\n    initialize = async () => {\n        const { BaseActions } = this.props;\n        try{\n            BaseActions.getOauth2User();\n        }catch(e){\n            console.log(e);\n        }\n    };\n\n    componentDidMount() {\n        this.initialize();\n    };\n\n    render() {\n        return <Redirect to={{\n            pathname: \"/\",\n            state: { from: this.props.location }\n        }}/>;\n\n    }\n}\nexport default connect(\n    (state) => ({\n\n    }),\n    (dispatch) => ({\n        BaseActions: bindActionCreators(baseActions, dispatch)\n    })\n)(OAuth2RedirectHandler);","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ListPage, ProductViewPage, ProductRegistrationPage, LoginPage, SignupPage, OrderPage, OrderCompletePage, NotFoundPage } from 'pages';\nimport OAuth2RedirectHandler from \"./oauth2\";\n\nconst App = () => {\n    return (\n        <div>\n            <Switch>\n                <Route exact path=\"/\" component={ListPage}/>\n                <Route path=\"/page/:page\" component={ListPage}/>\n                <Route path=\"/category/:category/:page?\" component={ListPage}/>\n                <Route exact path=\"/product/registration\" component={ProductRegistrationPage}/>\n                <Route path=\"/product/:id\" component={ProductViewPage}/>\n                <Route path=\"/login\" component={LoginPage}/>\n                <Route path=\"/signup\" component={SignupPage}/>\n                <Route exact path=\"/order\" component={OrderPage}/>\n                <Route path=\"/order/complete\" component={OrderCompletePage}/>\n                <Route path=\"/oauth2/redirect\" component={OAuth2RedirectHandler}/>\n                <Route component={NotFoundPage}/>\n            </Switch>\n        </div>\n    );\n};\n\nexport default App;","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport penderMiddleware from 'redux-pender';\nimport * as modules from './modules';\n\nconst reducers = combineReducers(modules);\nconst middlewares = [penderMiddleware()];\n\nconst isDev = process.env.NODE_ENV === 'development';\nconst devtools = isDev && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__;\nconst composeEnhancers = devtools || compose;\n\nconst configure = (preloadedState) => createStore(reducers, preloadedState, composeEnhancers(\n    applyMiddleware(...middlewares)\n));\n\nexport default configure;","import React from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from 'components/App';\nimport { Provider } from 'react-redux';\nimport configure from 'store/configure';\n\nconst store = configure();\n\nconst Root = () => {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <App/>\n            </BrowserRouter>\n        </Provider>\n    )\n}\n\nexport default Root;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Root from 'Root';\nimport * as serviceWorker from './serviceWorker';\nimport 'styles/base.scss';\n\nReactDOM.render(<Root />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import axios from 'axios';\nimport queryString from 'query-string';\n\nconst request = () => {\n    var token = '';\n    if(sessionStorage.getItem(\"accessToken\")) {\n        token = sessionStorage.getItem(\"accessToken\");\n    }\n    const headers = {\n        headers: {\n            //'Content-Type': 'application/json',\n            Authorization: 'Bearer ' + token\n        }\n    };\n\n    return headers;\n};\n\nexport const getCategoryList = () => axios.get('/api/product/category');\nexport const addProduct = (product) => axios.post('/api/product', product, request());\nexport const getProductOptionList = () => axios.get('/api/product/option', request());\nexport const getProduct = (id) => axios.get(`/api/product/${id}`);\nexport const getProductList = ({category, page}) => axios.get(`/api/product/?${queryString.stringify({category, page})}`);\n\nexport const login = ({userId, password}) => axios.post('/api/user/login', {userId, password}, request());\nexport const signup = ({userId, password, name}) => axios.post('/api/user/signup', {userId, password, name});\nexport const getOauth2User = () => axios.get(`/api/user/oauth`);\n\nexport const getOrderOptionList = () => axios.get('/api/order/option', request());\nexport const addOrder = (order) => axios.post('/api/order', order, request());\n\n\n\n","import { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\nimport * as api from 'lib/api';\n\n// action types\nconst INITIALIZE_ORDER = 'order/INITIALIZE_ORDER';\nconst GET_OPTION_LIST = 'order/GET_OPTION_LIST';\nconst SHOW_MODAL = 'order/SHOW_MODAL';\nconst HIDE_MODAL = 'order/HIDE_MODAL';\nconst ADD_ORDER = 'order/ADD_ORDER';\nconst CHANGE_INPUT = 'order/CHANGE_INPUT';\nconst CHANGE_OBJECT = 'order/CHANGE_OBJECT';\n\n// action creators\nexport const initializeOrder = createAction(INITIALIZE_ORDER);\nexport const getOptionList = createAction(GET_OPTION_LIST, api.getOrderOptionList);\nexport const showModal = createAction(SHOW_MODAL);\nexport const hideModal = createAction(HIDE_MODAL);\nexport const addOrder = createAction(ADD_ORDER, api.addOrder);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const changeObject = createAction(CHANGE_OBJECT);\n\n// initial state\nconst initialState = Map({\n    modalPostCode: false,\n\n    orderItems: fromJS([]),\n\n    ordererName: '',\n    zipcode: '',\n    address: '',\n    detailAddress: '',\n    extraAddress: '',\n    mobileNo1: '',\n    mobileNo2: '',\n    mobileNo3: '',\n\n    selectedPayment: Map({}),\n    depositorName: '',\n    selectedBankBook: Map({}),\n\n    totalPrice: '',\n\n    userId: '',\n\n    paymentWays: fromJS([]),\n    bankBooks: fromJS([]),\n    phoneFirstNumberTypes: fromJS([]),\n    error: Map({\n        status: '',\n        message: '',\n    }),\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE_ORDER]: (state, action) => {\n        const { payload: orderItems } = action;\n        state = initialState;\n        return state.set('orderItems', orderItems);\n    },\n    [SHOW_MODAL]: (state, action) => {\n        return state.set('modalPostCode', true);\n    },\n    [HIDE_MODAL]: (state, action) => {\n        return state.set('modalPostCode', false);\n    },\n    [CHANGE_INPUT]: (state, action) => {\n        const { name, value } = action.payload;\n        return state.set(name, value);\n    },\n    [CHANGE_OBJECT]: (state, action) => {\n        const { name } = action.payload;\n        let value = action.payload.value;\n        value = eval(\"(\"+value+\")\");\n        return state.set(name, Map(value));\n    },\n    ...pender({\n        type: GET_OPTION_LIST,\n        onSuccess: (state, action) => {\n            const { paymentWays, bankBooks, phoneFirstNumberTypes } = action.payload.data;\n            return state.set('paymentWays', fromJS(paymentWays))\n                .set('bankBooks', fromJS(bankBooks))\n                .set('phoneFirstNumberTypes', fromJS(phoneFirstNumberTypes))\n                .set('selectedPayment', Map(paymentWays[0]))\n                .set('selectedBankBook', Map(bankBooks[0]))\n                .set('mobileNo1', phoneFirstNumberTypes[0].code)\n        },\n        onError: (state, action) => {\n            const { status, message } = action.payload.response.data;\n            return state.setIn(['error', 'status'], status)\n                .setIn(['error', 'message'], message);\n        }\n    }),\n    ...pender({\n        type: ADD_ORDER,\n        onError: (state, action) => {\n            const { status, message } = action.payload.response.data;\n            return state.setIn(['error', 'status'], status)\n                .setIn(['error', 'message'], message);\n        }\n    }),\n}, initialState)","import { createAction, handleActions } from 'redux-actions';\n\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api';\n\n// action types\nconst INITIALIZE = 'productView/INITIALIZE';\nconst GET_PRODUCT = 'productView/GET_PRODUCT';\nconst CHANGE_INPUT = 'productView/CHANGE_INPUT';\nconst ADD_ORDER_OPTION = 'productView/ADD_ORDER_OPTION';\nconst DELETE_ORDER_OPTION = 'productView/DELETE_ORDER_OPTION';\nconst CHANGE_SELECTBOX = 'productView/CHANGE_SELECTBOX';\nconst CHANGE_ORDER_PRODUCT_NUMBER = 'productView/CHANGE_ORDER_PRODUCT_NUMBER';\n\n// action creators\nexport const initialize = createAction(INITIALIZE);\nexport const getProduct = createAction(GET_PRODUCT, api.getProduct);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const changeSelectbox = createAction(CHANGE_SELECTBOX);\nexport const addOrderOption = createAction(ADD_ORDER_OPTION);\nexport const deleteOrderOption = createAction(DELETE_ORDER_OPTION);\nexport const changeOrderProductNumber = createAction(CHANGE_ORDER_PRODUCT_NUMBER);\n\n// initial state\nconst initialState = Map({\n    product: Map({\n        id: '',\n        title: '',\n        categoryCode: '',\n        price: '',\n        savedMoneyRate: '',\n        description: '',\n        options: fromJS([]),\n        productFile: '',\n        productDetailFiles: fromJS([]),\n\n    }),\n    selectedColor: Map({\n        code: '',\n        name: ''\n    }),\n    selectedSize: Map({\n        code: '',\n        name: ''\n    }),\n    number: '',\n\n    order: Map({\n        options: fromJS([]),\n    })\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE]: (state, action) => initialState,\n    ...pender({\n        type: GET_PRODUCT,\n        onSuccess: (state, action) => {\n            const { data } = action.payload;\n            return state.set('product', fromJS(data));\n        },\n        onError: (state, action) => {\n\n        }\n    }),\n    [CHANGE_INPUT]: (state, action) => {\n        const { name, value } = action.payload;\n        return state.set(name, value);\n    },\n    [CHANGE_SELECTBOX]: (state, action) => {\n        const name = action.payload.name;\n        let value = action.payload.value;\n        if(value === \"\") return state.setIn([name, 'code'], '')\n            .setIn([name, 'name'], '');\n        value = eval(\"(\"+value+\")\");\n        return state.setIn([name, 'code'], value.code)\n            .setIn([name, 'name'], value.name);\n    },\n    [ADD_ORDER_OPTION]: (state, action) => {\n        const { selectedColor, selectedSize } = action.payload;\n        const option = Map({color: selectedColor, size: selectedSize, number: 1});\n        return state.setIn(['order', 'options'], state.get('order').get('options').push(option))\n            .set('selectedColor', Map({code: '', name: ''}))\n            .set('selectedSize', Map({code: '', name: ''}))\n    },\n    [DELETE_ORDER_OPTION]: (state, action) => {\n        const { payload: index } = action;\n        return state.setIn(['order', 'options'], state.get('order').get('options').delete(index))\n    },\n    [CHANGE_ORDER_PRODUCT_NUMBER]: (state, action) => {\n        const { name, value, index } = action.payload;\n        return state.setIn(['order', 'options', index, name], value);\n    },\n}, initialState)","import { createAction, handleActions } from 'redux-actions';\nimport { Map, List, fromJS } from 'immutable';\nimport { pender } from 'redux-pender';\n\nimport * as api from 'lib/api';\n\n// action types\nconst INITIALIZE = 'productRegistration/INITIALIZE';\nconst GET_OPTION_LIST = 'productRegistration/GET_OPTION_LIST';\nconst ADD_OPTION = 'productRegistration/ADD_OPTION';\nconst DELETE_OPTION = 'productRegistration/DELETE_OPTION';\nconst CHANGE_INPUT = 'productRegistration/CHANGE_INPUT';\nconst CHANGE_SELECTBOX = 'productRegistration/CHANGE_SELECTBOX';\nconst ADD_SINGLE_IMAGE = 'productRegistration/ADD_SINGLE_IMAGE';\nconst ADD_MULTI_IMAGE = 'productRegistration/ADD_MULTI_IMAGE';\nconst ADD_PRODUCT = 'productRegistration/ADD_PRODUCT';\n\n// action creators\nexport const initialize = createAction(INITIALIZE);\nexport const getOptionList = createAction(GET_OPTION_LIST, api.getProductOptionList);\nexport const addOption = createAction(ADD_OPTION);\nexport const deleteOption = createAction(DELETE_OPTION);\nexport const changeInput = createAction(CHANGE_INPUT);\nexport const changeSelectbox = createAction(CHANGE_SELECTBOX);\nexport const addSingleImage = createAction(ADD_SINGLE_IMAGE);\nexport const addMultiImage = createAction(ADD_MULTI_IMAGE);\nexport const addProduct = createAction(ADD_PRODUCT, api.addProduct);\n\n// initial state\nconst initialState = Map({\n    productId: null,\n    product: Map({\n        title: '',\n        category: Map({\n            code: '',\n            name: ''\n        }),\n        price: '',\n        savedMoneyRate: '',\n        options: fromJS([]),\n        description: '',\n        createdId: '',\n\n        color: Map({\n            code: '',\n            name: ''\n        }),\n        size: Map({\n            code: '',\n            name: ''\n        }),\n        number: '',\n    }),\n    productFiles: Map({\n        productImagePreview: '',\n        productImage: '',\n        productDetailImagesPreview: fromJS([]),\n        productDetailImages: fromJS([])\n    }),\n    categories: fromJS([]),\n    colorData: fromJS([]),\n    sizeData: fromJS([]),\n    error: Map({\n        status: '',\n        message: '',\n    }),\n});\n\n// reducer\nexport default handleActions({\n    [INITIALIZE]: (state, action) => initialState,\n    [CHANGE_INPUT]: (state, action) => {\n        const { name, value } = action.payload;\n        return state.setIn(['product', name], value);\n    },\n    [CHANGE_SELECTBOX]: (state, action) => {\n        const name = action.payload.name;\n        let value = action.payload.value;\n        value = eval(\"(\"+value+\")\");\n        return state.setIn(['product', name, 'code'], value.code)\n            .setIn(['product', name, 'name'], value.name);\n    },\n    [ADD_OPTION]: (state, action) => {\n        const { payload: option } = action;\n        return state.setIn(['product', 'options'], state.get('product').get('options').push(Map(option)))\n            .setIn(['product', 'color'], Map({code: '', name: ''}))\n            .setIn(['product', 'size'], Map({code: '', name: ''}))\n            .setIn(['product', 'number'], '')\n    },\n    [DELETE_OPTION]: (state, action) => {\n        const { payload: index } = action;\n        return state.setIn(['product', 'options'], state.get('product').get('options').delete(index))\n    },\n    [ADD_SINGLE_IMAGE]: (state, action) => {\n        const { name, fileUrl, file } = action.payload;\n        return state.setIn(['productFiles', name + 'Preview'], fileUrl)\n            .setIn(['productFiles', name], file)\n    },\n    [ADD_MULTI_IMAGE]: (state, action) => {\n        const { name, fileUrl, file } = action.payload;\n        return state.setIn(['productFiles', name + 'Preview'], state.get('productFiles').get(name + 'Preview').push(fileUrl))\n            .setIn(['productFiles', name], state.get('productFiles').get(name).push(file))\n    },\n    ...pender({\n        type: ADD_PRODUCT,\n        onSuccess: (state, action) => {\n            const { data: productId } = action.payload;\n            return state.set('productId', productId);\n        },\n        onError: (state, action) => {\n            const { status, message } = action.payload.response.data;\n            return state.setIn(['error', 'status'], status)\n                .setIn(['error', 'message'], message);\n        }\n    }),\n    ...pender({\n        type: GET_OPTION_LIST,\n        onSuccess: (state, action) => {\n            const { categories, colorData, sizeData } = action.payload.data;\n            return state.set('categories', fromJS(categories))\n                .set('colorData', fromJS(colorData))\n                .set('sizeData', fromJS(sizeData));\n\n        },\n        onError: (state, action) => {\n            const { status, message } = action.payload.response.data;\n            return state.setIn(['error', 'status'], status)\n                .setIn(['error', 'message'], message);\n        }\n    }),\n}, initialState)"],"sourceRoot":""}